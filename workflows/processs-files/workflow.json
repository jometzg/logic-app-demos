{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "If_the_file_is_a_zip": {
                "type": "If",
                "expression": {
                    "and": [
                        {
                            "endsWith": [
                                "@triggerBody()?['fileMetadata']?['name']",
                                ".zip"
                            ]
                        }
                    ]
                },
                "actions": {
                    "unzip_to_destination": {
                        "type": "Function",
                        "inputs": {
                            "method": "POST",
                            "body": {
                                "SourceContainerName": "sftp",
                                "ZipBlobName": "@{triggerBody()?['fileMetadata']?['name']}",
                                "Password": "@{body('Get_secret')?['value']}",
                                "DestinationContainerName": "destination"
                            },
                            "function": {
                                "connectionName": "azureFunctionOperation"
                            }
                        },
                        "runAfter": {
                            "Get_secret": [
                                "SUCCEEDED"
                            ]
                        }
                    },
                    "Get_secret": {
                        "type": "ServiceProvider",
                        "inputs": {
                            "parameters": {
                                "secretName": "zippassword"
                            },
                            "serviceProviderConfiguration": {
                                "connectionName": "keyVault",
                                "operationId": "getSecret",
                                "serviceProviderId": "/serviceProviders/keyVault"
                            }
                        }
                    }
                },
                "else": {
                    "actions": {
                        "Upload_to_external_SFTP_site": {
                            "type": "ServiceProvider",
                            "inputs": {
                                "parameters": {
                                    "filePath": "target/@{triggerBody()?['fileMetadata']?['name']}",
                                    "overWriteFileIfExists": true,
                                    "content": "@triggerBody()?['content']"
                                },
                                "serviceProviderConfiguration": {
                                    "connectionName": "Sftp-1",
                                    "operationId": "uploadFileContent",
                                    "serviceProviderId": "/serviceProviders/Sftp"
                                }
                            },
                            "runAfter": {
                                "Create_folder": [
                                    "SUCCEEDED"
                                ]
                            }
                        },
                        "Create_folder": {
                            "type": "ServiceProvider",
                            "inputs": {
                                "parameters": {
                                    "folderPath": "target"
                                },
                                "serviceProviderConfiguration": {
                                    "connectionName": "Sftp-1",
                                    "operationId": "createFolder",
                                    "serviceProviderId": "/serviceProviders/Sftp"
                                }
                            }
                        }
                    }
                },
                "runAfter": {
                    "Initialize_fullpath": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Initialize_filename": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "filename",
                            "type": "string",
                            "value": "@triggerBody()?['fileMetadata']?['name']"
                        }
                    ]
                },
                "runAfter": {}
            },
            "Initialize_fullpath": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "path",
                            "type": "string",
                            "value": "@triggerBody()?['fileMetadata']?['path']"
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_filename": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Delete_the_file_source_file": {
                "type": "ServiceProvider",
                "inputs": {
                    "parameters": {
                        "filePath": "@triggerBody()?['fileMetadata']?['path']",
                        "skipDelete": false
                    },
                    "serviceProviderConfiguration": {
                        "connectionName": "Sftp",
                        "operationId": "deleteFile",
                        "serviceProviderId": "/serviceProviders/Sftp"
                    }
                },
                "runAfter": {
                    "If_the_file_is_a_zip": [
                        "SUCCEEDED"
                    ]
                }
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "triggers": {
            "When_files_are_added_or_updated_on_SFTP_source": {
                "type": "ServiceProvider",
                "kind": "Polling",
                "inputs": {
                    "parameters": {
                        "folderPath": "/",
                        "includeFileContent": false
                    },
                    "serviceProviderConfiguration": {
                        "connectionName": "Sftp",
                        "operationId": "whenFilesAreAddedOrModified",
                        "serviceProviderId": "/serviceProviders/Sftp"
                    }
                },
                "recurrence": {
                    "interval": 1,
                    "frequency": "Minute"
                },
                "splitOn": "@triggerOutputs()?['body']"
            }
        }
    },
    "kind": "Stateful"
}
